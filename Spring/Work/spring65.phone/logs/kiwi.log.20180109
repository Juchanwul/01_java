main> [2018-01-09 10:28:41] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:28:41 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:28:41] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:28:41] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:28:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:28:42] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:28:42] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:28:42] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:28:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:28:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:28:43] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:28:43] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:28:43] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:28:43] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:28:43] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:28:43] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:28:43] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:28:43] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:28:41 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:28:41 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:28:43] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:28:43] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:28:43] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:28:43] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:28:43] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:28:43] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:28:43] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:28:43] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:28:43] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:28:43] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:28:43] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:28:43] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:28:43] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:28:43] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:28:43] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:28:43] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:28:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:43] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:28:43] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:28:43] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:28:43] [getPhoneList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone  
main> [2018-01-09 10:28:43] [getPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-09 10:28:43] [getPhoneList] [139] [DEBUG] <==      Total: 0 
main> [2018-01-09 10:28:43] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:28:43] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:28:43] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:28:43] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:04] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:29:04 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:29:04] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:29:04] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:29:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:29:05] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:05] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:05] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:05] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:05] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:05] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:05] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:05] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:29:05] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:05] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:05] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:05] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:05] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:29:05] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:29:04 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:05] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:29:04 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:29:05] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:29:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:29:05] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:29:05] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:29:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:29:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:29:05] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:29:05] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:29:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:29:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:29:05] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:29:05] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:29:06] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:29:06] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 10:29:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:29:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:06] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:29:06] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:06] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:29:06] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:29:06] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:29:06] [getPhoneList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone  
main> [2018-01-09 10:29:06] [getPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-09 10:29:06] [getPhoneList] [139] [DEBUG] <==      Total: 0 
main> [2018-01-09 10:29:06] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:29:06] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:29:06] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:29:06] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:25] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:29:25 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:29:25] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:29:25] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:29:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:29:25] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:25] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:25] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:25] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:26] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:26] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:26] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:26] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:29:26] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:26] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:26] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:29:26] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:29:25 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:29:25 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:29:26] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:29:26] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:29:26] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:29:26] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:29:26] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:29:26] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:29:26] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:29:26] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:29:26] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:29:26] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:29:26] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:29:26] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:29:26] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:29:26] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:26] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:26] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:26] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:26] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:29:26] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:29:26] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:29:26] [getPhoneList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone  
main> [2018-01-09 10:29:26] [getPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-09 10:29:27] [getPhoneList] [139] [DEBUG] <==      Total: 0 
main> [2018-01-09 10:29:27] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:29:27] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:29:27] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:29:27] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:29:27] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:27] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:27] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:27] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:27] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:41] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:29:41 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:29:42] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:29:43] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:29:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:29:44] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:44] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@41394595] 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:44] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:45] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:45] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:45] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:45] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:45] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@189b5fb1] 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:45] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:45] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#625e134e' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:45] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@1c025cb] 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:29:45] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:45] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:45] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:45] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:45] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:45] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:45] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:45] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:45] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:45] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:45] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:45] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:45] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:45] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:45] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:45] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:45] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:45] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:45] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:29:47] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:29:41 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:47] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:29:41 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:47] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:29:47] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:29:47] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:29:47] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:29:47] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:29:47] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:29:47] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:29:48] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:29:48] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:29:48] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:29:48] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:29:48] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:29:48] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:29:48] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:29:48] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:48] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:29:48] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@6944e53e] 
main> [2018-01-09 10:29:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:29:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:29:48] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:29:48] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:29:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:29:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:29:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:29:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:29:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:29:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:29:57] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:29:57] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:29:57] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:29:57] [getPhoneList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone  
main> [2018-01-09 10:29:57] [getPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-09 10:29:57] [getPhoneList] [139] [DEBUG] <==      Total: 0 
main> [2018-01-09 10:29:57] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:29:57] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:29:57] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:29:57] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:29:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:29:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:29:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:29:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:37] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:30:37 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:30:38] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:30:39] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:30:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:30:40] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:30:40] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@41394595] 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:30:40] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:30:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1275011461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:30:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@189b5fb1] 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:30:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:30:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#625e134e' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:30:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@1c025cb] 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:30:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:30:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:30:41] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1590404373, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [806572546, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:41] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1098737173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1288815068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:41] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:30:43] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:30:37 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:43] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:30:37 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:43] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:30:43] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:30:43] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:30:43] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:30:43] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:30:43] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:30:43] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:30:44] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:30:44] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:30:44] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:30:44] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:30:44] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:30:44] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:30:44] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:30:44] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:44] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:30:44] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@6944e53e] 
main> [2018-01-09 10:30:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:30:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:30:44] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:30:44] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:30:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:47] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:30:47] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:30:47] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:30:47] [getPhoneList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone  
main> [2018-01-09 10:30:47] [getPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-09 10:30:47] [getPhoneList] [139] [DEBUG] <==      Total: 0 
main> [2018-01-09 10:30:47] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:30:47] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:30:47] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:30:47] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:30:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:57] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:30:57 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:30:57] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:30:58] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:30:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:30:58] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:30:58] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:30:58] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:30:58] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:58] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:58] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:58] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:58] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:58] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:58] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:58] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:58] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:58] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:30:58] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:30:58] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:30:59] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:30:59] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:30:59] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:30:59] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:30:59] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:59] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:59] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:30:59] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:30:57 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:59] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:30:57 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:59] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:30:59] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:30:59] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:30:59] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:30:59] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:30:59] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:30:59] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:30:59] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:30:59] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:30:59] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:30:59] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:30:59] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:30:59] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:30:59] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:30:59] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:59] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:30:59] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:30:59] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:30:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:30:59] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:30:59] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:30:59] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:30:59] [getPhoneList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone  
main> [2018-01-09 10:30:59] [getPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-09 10:30:59] [getPhoneList] [139] [DEBUG] <==      Total: 0 
main> [2018-01-09 10:30:59] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:30:59] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:30:59] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:30:59] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:30:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:30:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:05] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:45:05 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:45:05] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:45:05] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:45:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:45:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:45:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:45:06] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:45:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:45:06] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:45:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:45:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:45:06] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:45:06] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:45:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:45:06] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:06] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:06] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:45:07] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:45:05 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:07] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:07] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:07] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:07] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:45:05 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:07] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:07] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:07] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:07] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:07] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:07] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:07] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:07] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:07] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:07] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:09] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:45:09] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:45:09] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:45:09] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:45:09] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:45:09] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:45:09] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:45:09] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:45:09] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:45:09] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:45:09] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:45:09] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:45:09] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:45:09] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:45:09] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:09] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:09] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1687702287, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:09] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:09] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:45:09] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@6944e53e] 
main> [2018-01-09 10:45:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:45:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:45:09] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:45:09] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:45:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:45:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:09] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:09] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2047799833, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:09] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:09] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:09] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1179244298, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:09] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:09] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:09] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:45:09] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:45:09] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:45:09] [getPhoneList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone  
main> [2018-01-09 10:45:09] [getPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-09 10:45:09] [getPhoneList] [139] [DEBUG] <==      Total: 0 
main> [2018-01-09 10:45:09] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:45:09] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:45:09] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:45:09] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3804a9a8] 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:09] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:09] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [790851040, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:09] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:37] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:45:37 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:45:37] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:45:38] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:45:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:45:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:45:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:45:38] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:45:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:45:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:45:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:45:39] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:45:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:45:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:45:39] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:45:39] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:45:39] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:45:39] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:45:37 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:45:37 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:45:39] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:45:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:45:39] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:45:39] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:45:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:45:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:45:39] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:45:39] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:45:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:45:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:45:39] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:45:39] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:45:39] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:45:39] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:45:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:45:39] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:45:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:45:39] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:45:39] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:45:39] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:45:39] [getPhoneList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone  
main> [2018-01-09 10:45:39] [getPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-09 10:45:39] [getPhoneList] [139] [DEBUG] <==      Total: 0 
main> [2018-01-09 10:45:39] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:45:39] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:45:39] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:45:39] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:45:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:45:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:09] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:46:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:46:09] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:46:09] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:46:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:46:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:46:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:46:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:46:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:46:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:46:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:46:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:46:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:46:10] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:10] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:10] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:46:11] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:46:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:11] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:46:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:46:11] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:46:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:46:11] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:46:11] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:46:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:46:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:46:11] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:46:11] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:46:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:46:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:46:11] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:46:11] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:46:11] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:46:11] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:46:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@52e04737] 
main> [2018-01-09 10:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:46:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:46:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1320826684, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1320826684, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:46:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:46:11] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646c0a67] 
main> [2018-01-09 10:46:11] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1320826684, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:46:11] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_Phone ( name , manufacturer , price ) VALUES ( ?, ?, ? )  
main> [2018-01-09 10:46:11] [insertPhone] [139] [DEBUG] ==> Parameters: null, null, null 
main> [2018-01-09 10:46:11] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646c0a67] 
main> [2018-01-09 10:46:11] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
main> [2018-01-09 10:46:11] [SQLErrorCodesFactory] [126] [INFO] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
main> [2018-01-09 10:46:11] [SQLErrorCodesFactory] [199] [DEBUG] Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp2.BasicDataSource@46c00568] 
main> [2018-01-09 10:46:11] [SQLErrorCodesFactory] [217] [DEBUG] Database product name cached for DataSource [org.apache.commons.dbcp2.BasicDataSource@46c00568]: name is 'MySQL' 
main> [2018-01-09 10:46:11] [SQLErrorCodesFactory] [175] [DEBUG] SQL error codes for 'MySQL' found 
main> [2018-01-09 10:46:11] [SQLErrorCodeSQLExceptionTranslator] [281] [DEBUG] Unable to translate SQLException with Error code '1048', will now try the fallback translator 
main> [2018-01-09 10:46:11] [ServicePhone] [56] [ERROR] insertPhone
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve mapper.mysql.mapperPhone.insertPhone-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO          TB_Phone ( name   , manufacturer   , price    )         VALUES   ( ?, ?, ? )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'name' cannot be null
; SQL []; Column 'name' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'name' cannot be null 
main> [2018-01-09 10:46:11] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646c0a67] 
main> [2018-01-09 10:46:11] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646c0a67] 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [847] [DEBUG] Initiating transaction rollback 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [284] [DEBUG] Rolling back JDBC transaction on Connection [1320826684, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1320826684, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:13] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:47:13 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:47:13] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:47:13] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:47:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:47:13] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:47:13] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:47:13] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:13] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:47:13] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:47:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:47:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:47:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:47:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:47:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:47:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:47:14] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:14] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:14] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:47:14] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:47:13 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [302059473, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:14] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:47:13 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [774095232, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1266435158, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1280959582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:14] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:47:14] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:47:14] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:47:14] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:47:14] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:47:14] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:47:14] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:47:14] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:47:14] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:47:14] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:47:14] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:47:14] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:47:14] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:47:14] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:47:14] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:47:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@52e04737] 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:47:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [455036946, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1564688538, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:49] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:47:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:47:49] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:47:50] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:47:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:47:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:47:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:47:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:47:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:47:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:47:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:47:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:47:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:47:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:47:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:47:50] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:50] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:51] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:47:51] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:47:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:51] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:47:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:47:51] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:47:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:47:51] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:47:51] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:47:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:47:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:47:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:47:51] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:47:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:47:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:47:51] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:47:51] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:47:51] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:47:51] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:51] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:47:51] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 10:47:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:47:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:47:51] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:47:51] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:47:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:47:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:47:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:47:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:39] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:48:39 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:48:39] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:48:40] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:48:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:48:40] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:48:40] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:48:40] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:40] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:40] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:40] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:48:40] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:48:40] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:48:40] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:48:40] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:48:40] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:48:40] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:48:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:48:40] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:40] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:40] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:40] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:40] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:40] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:40] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:40] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:40] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:40] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:40] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:40] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:48:41] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:48:39 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:41] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:48:39 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:48:41] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:48:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:48:41] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:48:41] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:48:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:48:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:48:41] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:48:41] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:48:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:48:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:48:41] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:48:41] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:48:41] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:48:41] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:48:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 10:48:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:48:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:48:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:48:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:48:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:48:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:48:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:48:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:30] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:50:30 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:50:30] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:50:30] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:50:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:50:31] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:50:31] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:50:31] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1149388444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1149388444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1149388444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1149388444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1149388444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1149388444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:31] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:50:31] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@59942b48] 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:50:31] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:50:31] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:50:31] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@f9b5552] 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:50:31] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:50:31] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:50:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:50:31] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [538618049, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [538618049, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [538618049, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [538618049, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [538618049, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [538618049, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1418102907, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1418102907, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1418102907, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1418102907, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1418102907, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1418102907, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:31] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [809128217, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [809128217, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [809128217, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [809128217, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [809128217, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [809128217, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [428798670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [428798670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [428798670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [428798670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [428798670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [428798670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:31] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:50:31] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:50:30 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:32] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 10:50:30 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:50:32] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:50:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:50:32] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:50:32] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:50:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:50:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:50:32] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:50:32] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:50:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:50:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:50:32] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 10:50:32] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:50:32] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:50:32] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:32] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:50:32] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 10:50:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 10:50:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:50:32] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:50:32] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:50:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:50:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:50:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:50:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:47] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:04:47 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:04:47] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 11:04:48] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:04:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:04:48] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:04:48] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:04:48] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:04:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:48] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:04:48] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:04:48] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:04:48] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:04:48] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 11:04:48] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:04:48] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:04:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:04:48] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 11:04:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:49] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:49] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:04:49] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:04:47 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:49] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:04:47 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:49] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 11:04:49] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 11:04:49] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 11:04:49] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 11:04:49] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 11:04:49] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:04:49] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:04:49] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 11:04:49] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:04:49] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:04:49] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:04:49] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 11:04:49] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 11:04:49] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 11:04:49] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:49] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:04:49] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 11:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 11:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:04:49] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:04:49] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:04:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:04:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:04:49] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:04:49] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:04:49] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:04:49] [getPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone WHERE name = ?  
main> [2018-01-09 11:04:49] [getPhoneOne] [139] [DEBUG] ==> Parameters: name1(String) 
main> [2018-01-09 11:04:49] [getPhoneOne] [139] [DEBUG] <==      Total: 0 
main> [2018-01-09 11:04:49] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:04:49] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:04:49] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:04:49] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:04:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:04:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:13] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:06:13 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:06:13] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 11:06:13] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:06:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:06:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:06:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:06:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:06:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:06:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:06:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:06:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 11:06:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:06:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:06:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:06:14] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:14] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:14] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:06:15] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:06:13 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:15] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:06:13 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2136911375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2136911375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2136911375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2136911375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2136911375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2136911375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1145882513, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1145882513, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1145882513, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1145882513, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1145882513, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1145882513, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:15] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 11:06:15] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 11:06:15] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 11:06:15] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 11:06:15] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 11:06:15] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:06:15] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:06:15] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 11:06:15] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:06:15] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:06:15] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:06:15] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 11:06:15] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 11:06:15] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 11:06:15] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1950246647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1950246647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1950246647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1950246647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1950246647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1950246647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:15] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:06:15] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@68d651f2] 
main> [2018-01-09 11:06:15] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 11:06:15] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:06:15] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:06:15] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:06:15] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:06:15] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998103567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998103567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998103567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998103567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998103567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998103567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1624203949, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1624203949, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1624203949, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1624203949, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1624203949, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1624203949, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:18] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 11:06:18] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [780802740, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:18] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [780802740, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:18] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:06:18] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e65afb6] 
main> [2018-01-09 11:06:18] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [780802740, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:06:18] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_Phone ( name , manufacturer , price ) VALUES ( ?, ?, ? )  
main> [2018-01-09 11:06:18] [insertPhone] [139] [DEBUG] ==> Parameters: name1(String), manu1(String), 1000(Integer) 
main> [2018-01-09 11:06:18] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-09 11:06:18] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e65afb6] 
main> [2018-01-09 11:06:18] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e65afb6] 
main> [2018-01-09 11:06:18] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e65afb6] 
main> [2018-01-09 11:06:18] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e65afb6] 
main> [2018-01-09 11:06:18] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:18] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [780802740, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:18] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [780802740, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:18] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:29] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:06:29 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:06:29] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 11:06:29] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:06:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:06:30] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:06:30] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:06:30] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:30] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:30] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:30] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:30] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:06:30] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:06:30] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:06:30] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:06:30] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 11:06:30] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:06:30] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:06:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:06:30] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:30] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:30] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:30] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:30] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:30] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:30] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:30] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:30] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:30] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:30] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:30] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:30] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:30] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:30] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:30] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:06:31] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:06:29 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:31] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:06:29 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:31] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 11:06:31] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 11:06:31] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 11:06:31] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 11:06:31] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 11:06:31] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:06:31] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:06:31] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 11:06:31] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:06:31] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:06:31] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:06:31] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 11:06:31] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 11:06:31] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 11:06:31] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:31] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:06:31] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 11:06:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 11:06:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:06:31] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:06:31] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:06:31] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:06:31] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:06:31] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:06:31] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:06:31] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:06:31] [getPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone WHERE name = ?  
main> [2018-01-09 11:06:31] [getPhoneOne] [139] [DEBUG] ==> Parameters: name1(String) 
main> [2018-01-09 11:06:31] [getPhoneOne] [139] [DEBUG] <==      Total: 1 
main> [2018-01-09 11:06:31] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:06:31] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:06:31] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:06:31] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:06:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:06:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:38] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:08:38 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:08:38] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 11:08:38] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:08:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:08:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:08:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:08:38] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:08:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:08:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:08:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:08:39] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:08:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:08:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 11:08:39] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:08:39] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:08:39] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:08:39] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:08:38 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:08:38 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 11:08:39] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 11:08:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 11:08:39] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 11:08:39] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 11:08:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:08:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:08:39] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 11:08:39] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:08:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:08:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:08:39] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 11:08:39] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 11:08:39] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 11:08:39] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:08:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:08:39] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:08:39] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:39] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:08:39] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:08:39] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:08:39] [getPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone WHERE name = ?  
main> [2018-01-09 11:08:39] [getPhoneOne] [139] [DEBUG] ==> Parameters: name1(String) 
main> [2018-01-09 11:08:39] [getPhoneOne] [139] [DEBUG] <==      Total: 1 
main> [2018-01-09 11:08:39] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:08:39] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:08:39] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:08:39] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:49] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:08:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:08:49] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 11:08:49] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:08:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:08:49] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:08:49] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:08:49] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:08:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:08:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:08:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:08:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:08:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 11:08:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:08:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:08:50] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:08:50] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:08:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:08:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 11:08:50] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 11:08:50] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 11:08:50] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 11:08:50] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 11:08:50] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:08:50] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:08:50] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 11:08:50] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:08:50] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:08:50] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:08:50] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 11:08:50] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 11:08:50] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 11:08:50] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:08:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:08:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:08:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:08:50] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:08:50] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:08:50] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:08:50] [getPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone WHERE name = ?  
main> [2018-01-09 11:08:50] [getPhoneOne] [139] [DEBUG] ==> Parameters: name1(String) 
main> [2018-01-09 11:08:50] [getPhoneOne] [139] [DEBUG] <==      Total: 1 
main> [2018-01-09 11:08:50] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:08:50] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:08:50] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:08:50] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:08:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:08:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:40] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:09:40 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:09:40] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 11:09:40] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:09:40] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:09:40] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:09:40] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:09:40] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:09:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:09:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:09:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:09:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:09:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 11:09:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:09:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:09:41] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:09:41] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:09:40 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:09:40 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 11:09:41] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 11:09:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 11:09:41] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 11:09:41] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 11:09:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:09:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:09:41] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 11:09:41] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:09:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:09:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:09:41] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 11:09:41] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 11:09:41] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 11:09:41] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:09:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:09:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:09:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:09:41] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:09:41] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:09:41] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:09:41] [getPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone WHERE name = ?  
main> [2018-01-09 11:09:41] [getPhoneOne] [139] [DEBUG] ==> Parameters: name1(String) 
main> [2018-01-09 11:09:41] [getPhoneOne] [139] [DEBUG] <==      Total: 1 
main> [2018-01-09 11:09:41] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:09:41] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:09:41] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:09:41] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:09:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:09:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:52] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:10:52 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:10:52] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 11:10:52] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:10:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:10:53] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:10:53] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:10:53] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:53] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:10:53] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:10:53] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:10:53] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:10:53] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 11:10:53] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:10:53] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:10:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:10:53] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:53] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:53] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:10:53] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:10:52 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:53] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:10:52 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 11:10:54] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 11:10:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 11:10:54] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 11:10:54] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 11:10:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:10:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:10:54] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 11:10:54] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:10:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:10:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:10:54] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 11:10:54] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 11:10:54] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 11:10:54] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:10:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 11:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 11:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:10:54] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:10:54] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:10:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:10:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:10:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:10:54] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:10:54] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:10:54] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:10:54] [getPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone WHERE name = ?  
main> [2018-01-09 11:10:54] [getPhoneOne] [139] [DEBUG] ==> Parameters: name1(String) 
main> [2018-01-09 11:10:54] [getPhoneOne] [139] [DEBUG] <==      Total: 1 
main> [2018-01-09 11:10:54] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:10:54] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:10:54] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:10:54] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:10:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:10:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:03] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:12:03 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:12:03] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 11:12:03] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:12:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:12:04] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:12:04] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:12:04] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:04] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:12:04] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:12:04] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:12:04] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:12:04] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 11:12:04] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:12:04] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:12:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:12:04] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:04] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:04] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:12:04] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:12:03 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:04] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:12:03 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 11:12:05] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 11:12:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 11:12:05] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 11:12:05] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 11:12:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:12:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:12:05] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 11:12:05] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:12:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:12:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:12:05] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 11:12:05] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 11:12:05] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 11:12:05] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:05] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:12:05] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 11:12:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 11:12:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:12:05] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:12:05] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:12:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:12:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:12:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:12:05] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:12:05] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:12:05] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:12:05] [getPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone WHERE name = ?  
main> [2018-01-09 11:12:05] [getPhoneOne] [139] [DEBUG] ==> Parameters: name1(String) 
main> [2018-01-09 11:12:05] [getPhoneOne] [139] [DEBUG] <==      Total: 1 
main> [2018-01-09 11:12:05] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:12:05] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:12:05] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:12:05] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:12:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:12:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:09] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:13:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:13:09] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 11:13:09] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:13:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:13:09] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:13:09] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:13:09] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:13:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:13:09] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:13:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:13:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:13:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:13:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 11:13:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:13:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:13:10] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:13:10] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:13:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:13:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 11:13:10] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 11:13:10] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 11:13:10] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 11:13:10] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 11:13:10] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:13:10] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:13:10] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 11:13:10] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:13:10] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:13:10] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:13:10] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 11:13:10] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 11:13:10] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 11:13:10] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:13:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:13:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:13:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:13:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:13:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:13:10] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:13:10] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:13:10] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:13:10] [getPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone WHERE name = ?  
main> [2018-01-09 11:13:11] [getPhoneOne] [139] [DEBUG] ==> Parameters: name1(String) 
main> [2018-01-09 11:13:11] [getPhoneOne] [139] [DEBUG] <==      Total: 1 
main> [2018-01-09 11:13:11] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:13:11] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:13:11] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:13:11] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767191b1] 
main> [2018-01-09 11:13:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:13:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:13:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [233309087, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:13:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:48] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:16:48 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:16:48] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 11:16:48] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:16:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:16:48] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:16:48] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2e8ab815] 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:16:48] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:16:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:16:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [886004375, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:49] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:16:49] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@488b50ec] 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:16:49] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:16:49] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#226642a5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:16:49] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6d2d99fc] 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 11:16:49] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:16:49] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:16:49] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1386440976, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:49] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [466319810, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:49] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:16:49] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:16:48 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1998371610, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:49] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5db45159: startup date [Tue Jan 09 11:16:48 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [185488647, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [208350681, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [312470853, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:49] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 11:16:49] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 11:16:49] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 11:16:49] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 11:16:49] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 11:16:49] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:16:49] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:16:49] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 11:16:49] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:16:49] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:16:49] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:16:49] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 <  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-09 11:16:49] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 11:16:49] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 11:16:49] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905758022, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:49] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicePhone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:16:49] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.service.ServicePhone@10643593] 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.service.ServicePhone.getPhoneList() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.service.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.service.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:16:49] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:16:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [680306160, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:16:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:16:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:17:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.service.ServicePhone.insertPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 11:17:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:17:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:17:04] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:17:04] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5633ed82] 
main> [2018-01-09 11:17:04] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:17:04] [insertPhoneList] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_Phone ( name , manufacturer , price ) VALUES ( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? )  
main> [2018-01-09 11:17:04] [insertPhoneList] [139] [DEBUG] ==> Parameters: name1(String), manu1(String), 1000(Integer), name2(String), manu2(String), 1000(Integer), name3(String), manu3(String), 1000(Integer), name4(String), manu4(String), 1000(Integer), name5(String), manu5(String), 1000(Integer) 
main> [2018-01-09 11:17:04] [insertPhoneList] [139] [DEBUG] <==    Updates: 5 
main> [2018-01-09 11:17:04] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5633ed82] 
main> [2018-01-09 11:17:04] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5633ed82] 
main> [2018-01-09 11:17:04] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5633ed82] 
main> [2018-01-09 11:17:04] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5633ed82] 
main> [2018-01-09 11:17:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:17:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:17:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:17:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
